events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log   warn;

    # Performance optimizations
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;
    
    # Video streaming optimizations
    client_max_body_size 100M;  # Allow larger video uploads if needed
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/javascript
        application/json
        application/xml
        text/css
        text/javascript
        text/xml
        text/plain;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Specific handling for JSON files in locales directory (must be first)
        location ~* /locales/.*\.json$ {
            add_header Content-Type application/json;
            expires 1h;
            add_header Cache-Control "public";
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type";
            try_files $uri =404;
        }

        # Serve other static files
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }
        
        # General JSON files (excluding locales which are handled above)
        location ~* \.json$ {
            add_header Content-Type application/json;
            expires 1h;
            add_header Cache-Control "public";
            try_files $uri =404;
        }

        # Media files from external directory
        location /media/ {
            alias /usr/share/nginx/html/media/;
            expires 30d;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            try_files $uri =404;
            
            # Video files with correct MIME types
            location ~* \.(mp4|avi|mkv)$ {
                gzip off;
                expires 30d;
                add_header Cache-Control "public, immutable";
                add_header Accept-Ranges bytes;  # Enable range requests for video seeking
                add_header Content-Type video/mp4;
            }
            
            # MOV files
            location ~* \.mov$ {
                gzip off;
                expires 30d;
                add_header Cache-Control "public, immutable";
                add_header Accept-Ranges bytes;
                add_header Content-Type video/quicktime;
            }
            
            # WebM files
            location ~* \.webm$ {
                gzip off;
                expires 30d;
                add_header Cache-Control "public, immutable";
                add_header Accept-Ranges bytes;
                add_header Content-Type video/webm;
            }
        }

        # Handle all other routes (for SPA support)
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Cache HTML files for a shorter time
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public";
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
